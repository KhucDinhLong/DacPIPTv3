<nav aria-label="page navigation example">
    <ul class="pagination">
        @foreach (var link in links)
        {
            <li @onclick="@(() => SelectedPageInternal(link))" style="cursor: pointer;"
                class="pagination_button page-item @(link.Enabled ? null : "disabled") @(link.Active ? "active" : null)">
                <span class="page-link" href="#">@link.Text</span>
            </li>
        }
    </ul>
</nav>

@code {
    [Parameter] public int ActualPage { get; set; } = 1;
    [Parameter] public int TotalPages { get; set; }
    [Parameter] public int Radius { get; set; } = 5;
    [Parameter] public EventCallback<int> SelectedPage { get; set; }
    List<LinkModel> links;

    protected override void OnParametersSet()
    {
        LoadPages();
    }

    private void LoadPages()
    {
        links = new List<LinkModel>();
        var isPrevPageLinkEnabled = ActualPage != 1;
        var PrevPage = ActualPage - 1;
        links.Add(new LinkModel(PrevPage, isPrevPageLinkEnabled, "Trước"));

        for (int i = 1; i <= TotalPages; i++)
        {
            if (i > ActualPage - Radius && i <= ActualPage + Radius)
            {
                links.Add(new LinkModel(i) { Active = ActualPage == i, });
            }
        }
        var isNextPageLinkEnabled = ActualPage != TotalPages;
        var NextPage = ActualPage + 1;
        links.Add(new LinkModel(NextPage, isNextPageLinkEnabled, "Sau"));
    }

    private async Task SelectedPageInternal(LinkModel link)
    {
        if (link.Page == ActualPage)
        {
            return;
        }

        if (!link.Enabled)
        {
            return;
        }

        ActualPage = link.Page;
        await SelectedPage.InvokeAsync(link.Page);
    }

    class LinkModel
    {
        public string Text { get; set; }
        public int Page { get; set; }
        public bool Enabled { get; set; } = true;
        public bool Active { get; set; } = false;

        public LinkModel(int page) : this(page, true)
        { }
        public LinkModel(int page, bool enabled) : this(page, enabled, page.ToString())
        { }
        public LinkModel(int page, bool enabled, string text)
        {
            Page = page;
            Enabled = enabled;
            Text = text;
        }
    }
}
